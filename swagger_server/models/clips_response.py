# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.clip import Clip  # noqa: F401,E501
from swagger_server.models.links import Links  # noqa: F401,E501
from swagger_server.models.meta import Meta  # noqa: F401,E501
from swagger_server import util


class ClipsResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, items: List[Clip]=None, links: Links=None, meta: Meta=None):  # noqa: E501
        """ClipsResponse - a model defined in Swagger

        :param items: The items of this ClipsResponse.  # noqa: E501
        :type items: List[Clip]
        :param links: The links of this ClipsResponse.  # noqa: E501
        :type links: Links
        :param meta: The meta of this ClipsResponse.  # noqa: E501
        :type meta: Meta
        """
        self.swagger_types = {
            'items': List[Clip],
            'links': Links,
            'meta': Meta
        }

        self.attribute_map = {
            'items': 'items',
            'links': 'links',
            'meta': 'meta'
        }
        self._items = items
        self._links = links
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt) -> 'ClipsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The clipsResponse of this ClipsResponse.  # noqa: E501
        :rtype: ClipsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self) -> List[Clip]:
        """Gets the items of this ClipsResponse.


        :return: The items of this ClipsResponse.
        :rtype: List[Clip]
        """
        return self._items

    @items.setter
    def items(self, items: List[Clip]):
        """Sets the items of this ClipsResponse.


        :param items: The items of this ClipsResponse.
        :type items: List[Clip]
        """

        self._items = items

    @property
    def links(self) -> Links:
        """Gets the links of this ClipsResponse.


        :return: The links of this ClipsResponse.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links: Links):
        """Sets the links of this ClipsResponse.


        :param links: The links of this ClipsResponse.
        :type links: Links
        """

        self._links = links

    @property
    def meta(self) -> Meta:
        """Gets the meta of this ClipsResponse.


        :return: The meta of this ClipsResponse.
        :rtype: Meta
        """
        return self._meta

    @meta.setter
    def meta(self, meta: Meta):
        """Sets the meta of this ClipsResponse.


        :param meta: The meta of this ClipsResponse.
        :type meta: Meta
        """

        self._meta = meta
