# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.links_self import LinksSelf  # noqa: F401,E501
from swagger_server import util


class DefaultResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, updated: datetime=None, created: datetime=None, etag: str=None, links: LinksSelf=None, status: str=None):  # noqa: E501
        """DefaultResponse - a model defined in Swagger

        :param id: The id of this DefaultResponse.  # noqa: E501
        :type id: str
        :param updated: The updated of this DefaultResponse.  # noqa: E501
        :type updated: datetime
        :param created: The created of this DefaultResponse.  # noqa: E501
        :type created: datetime
        :param etag: The etag of this DefaultResponse.  # noqa: E501
        :type etag: str
        :param links: The links of this DefaultResponse.  # noqa: E501
        :type links: LinksSelf
        :param status: The status of this DefaultResponse.  # noqa: E501
        :type status: str
        """
        self.swagger_types = {
            'id': str,
            'updated': datetime,
            'created': datetime,
            'etag': str,
            'links': LinksSelf,
            'status': str
        }

        self.attribute_map = {
            'id': '_id',
            'updated': 'updated',
            'created': 'created',
            'etag': 'etag',
            'links': 'links',
            'status': 'status'
        }
        self._id = id
        self._updated = updated
        self._created = created
        self._etag = etag
        self._links = links
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'DefaultResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The defaultResponse of this DefaultResponse.  # noqa: E501
        :rtype: DefaultResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this DefaultResponse.


        :return: The id of this DefaultResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this DefaultResponse.


        :param id: The id of this DefaultResponse.
        :type id: str
        """

        self._id = id

    @property
    def updated(self) -> datetime:
        """Gets the updated of this DefaultResponse.


        :return: The updated of this DefaultResponse.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated: datetime):
        """Sets the updated of this DefaultResponse.


        :param updated: The updated of this DefaultResponse.
        :type updated: datetime
        """

        self._updated = updated

    @property
    def created(self) -> datetime:
        """Gets the created of this DefaultResponse.


        :return: The created of this DefaultResponse.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this DefaultResponse.


        :param created: The created of this DefaultResponse.
        :type created: datetime
        """

        self._created = created

    @property
    def etag(self) -> str:
        """Gets the etag of this DefaultResponse.


        :return: The etag of this DefaultResponse.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag: str):
        """Sets the etag of this DefaultResponse.


        :param etag: The etag of this DefaultResponse.
        :type etag: str
        """

        self._etag = etag

    @property
    def links(self) -> LinksSelf:
        """Gets the links of this DefaultResponse.


        :return: The links of this DefaultResponse.
        :rtype: LinksSelf
        """
        return self._links

    @links.setter
    def links(self, links: LinksSelf):
        """Sets the links of this DefaultResponse.


        :param links: The links of this DefaultResponse.
        :type links: LinksSelf
        """

        self._links = links

    @property
    def status(self) -> str:
        """Gets the status of this DefaultResponse.


        :return: The status of this DefaultResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this DefaultResponse.


        :param status: The status of this DefaultResponse.
        :type status: str
        """

        self._status = status
