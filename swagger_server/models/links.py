# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.links_self_self import LinksSelfSelf  # noqa: F401,E501
from swagger_server import util


class Links(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, parent: LinksSelfSelf=None, _self: LinksSelfSelf=None, next: LinksSelfSelf=None, last: LinksSelfSelf=None, prev: LinksSelfSelf=None, collection: LinksSelfSelf=None):  # noqa: E501
        """Links - a model defined in Swagger

        :param parent: The parent of this Links.  # noqa: E501
        :type parent: LinksSelfSelf
        :param _self: The _self of this Links.  # noqa: E501
        :type _self: LinksSelfSelf
        :param next: The next of this Links.  # noqa: E501
        :type next: LinksSelfSelf
        :param last: The last of this Links.  # noqa: E501
        :type last: LinksSelfSelf
        :param prev: The prev of this Links.  # noqa: E501
        :type prev: LinksSelfSelf
        :param collection: The collection of this Links.  # noqa: E501
        :type collection: LinksSelfSelf
        """
        self.swagger_types = {
            'parent': LinksSelfSelf,
            '_self': LinksSelfSelf,
            'next': LinksSelfSelf,
            'last': LinksSelfSelf,
            'prev': LinksSelfSelf,
            'collection': LinksSelfSelf
        }

        self.attribute_map = {
            'parent': 'parent',
            '_self': 'self',
            'next': 'next',
            'last': 'last',
            'prev': 'prev',
            'collection': 'collection'
        }
        self._parent = parent
        self.__self = _self
        self._next = next
        self._last = last
        self._prev = prev
        self._collection = collection

    @classmethod
    def from_dict(cls, dikt) -> 'Links':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The links of this Links.  # noqa: E501
        :rtype: Links
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent(self) -> LinksSelfSelf:
        """Gets the parent of this Links.


        :return: The parent of this Links.
        :rtype: LinksSelfSelf
        """
        return self._parent

    @parent.setter
    def parent(self, parent: LinksSelfSelf):
        """Sets the parent of this Links.


        :param parent: The parent of this Links.
        :type parent: LinksSelfSelf
        """

        self._parent = parent

    @property
    def _self(self) -> LinksSelfSelf:
        """Gets the _self of this Links.


        :return: The _self of this Links.
        :rtype: LinksSelfSelf
        """
        return self.__self

    @_self.setter
    def _self(self, _self: LinksSelfSelf):
        """Sets the _self of this Links.


        :param _self: The _self of this Links.
        :type _self: LinksSelfSelf
        """

        self.__self = _self

    @property
    def next(self) -> LinksSelfSelf:
        """Gets the next of this Links.


        :return: The next of this Links.
        :rtype: LinksSelfSelf
        """
        return self._next

    @next.setter
    def next(self, next: LinksSelfSelf):
        """Sets the next of this Links.


        :param next: The next of this Links.
        :type next: LinksSelfSelf
        """

        self._next = next

    @property
    def last(self) -> LinksSelfSelf:
        """Gets the last of this Links.


        :return: The last of this Links.
        :rtype: LinksSelfSelf
        """
        return self._last

    @last.setter
    def last(self, last: LinksSelfSelf):
        """Sets the last of this Links.


        :param last: The last of this Links.
        :type last: LinksSelfSelf
        """

        self._last = last

    @property
    def prev(self) -> LinksSelfSelf:
        """Gets the prev of this Links.


        :return: The prev of this Links.
        :rtype: LinksSelfSelf
        """
        return self._prev

    @prev.setter
    def prev(self, prev: LinksSelfSelf):
        """Sets the prev of this Links.


        :param prev: The prev of this Links.
        :type prev: LinksSelfSelf
        """

        self._prev = prev

    @property
    def collection(self) -> LinksSelfSelf:
        """Gets the collection of this Links.


        :return: The collection of this Links.
        :rtype: LinksSelfSelf
        """
        return self._collection

    @collection.setter
    def collection(self, collection: LinksSelfSelf):
        """Sets the collection of this Links.


        :param collection: The collection of this Links.
        :type collection: LinksSelfSelf
        """

        self._collection = collection
