# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ObjectIndirectProperties(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, channel_id: int=None, app_id: int=None, frame_id: int=None, time_stamp: int=None, zone_id: int=-1, object_id: int=-1, track_id: int=-1, line_id: int=-1, point_id: int=-1):  # noqa: E501
        """ObjectIndirectProperties - a model defined in Swagger

        :param channel_id: The channel_id of this ObjectIndirectProperties.  # noqa: E501
        :type channel_id: int
        :param app_id: The app_id of this ObjectIndirectProperties.  # noqa: E501
        :type app_id: int
        :param frame_id: The frame_id of this ObjectIndirectProperties.  # noqa: E501
        :type frame_id: int
        :param time_stamp: The time_stamp of this ObjectIndirectProperties.  # noqa: E501
        :type time_stamp: int
        :param zone_id: The zone_id of this ObjectIndirectProperties.  # noqa: E501
        :type zone_id: int
        :param object_id: The object_id of this ObjectIndirectProperties.  # noqa: E501
        :type object_id: int
        :param track_id: The track_id of this ObjectIndirectProperties.  # noqa: E501
        :type track_id: int
        :param line_id: The line_id of this ObjectIndirectProperties.  # noqa: E501
        :type line_id: int
        :param point_id: The point_id of this ObjectIndirectProperties.  # noqa: E501
        :type point_id: int
        """
        self.swagger_types = {
            'channel_id': int,
            'app_id': int,
            'frame_id': int,
            'time_stamp': int,
            'zone_id': int,
            'object_id': int,
            'track_id': int,
            'line_id': int,
            'point_id': int
        }

        self.attribute_map = {
            'channel_id': 'channelId',
            'app_id': 'appId',
            'frame_id': 'frameId',
            'time_stamp': 'timeStamp',
            'zone_id': 'zoneId',
            'object_id': 'objectId',
            'track_id': 'trackId',
            'line_id': 'lineId',
            'point_id': 'pointId'
        }
        self._channel_id = channel_id
        self._app_id = app_id
        self._frame_id = frame_id
        self._time_stamp = time_stamp
        self._zone_id = zone_id
        self._object_id = object_id
        self._track_id = track_id
        self._line_id = line_id
        self._point_id = point_id

    @classmethod
    def from_dict(cls, dikt) -> 'ObjectIndirectProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The objectIndirectProperties of this ObjectIndirectProperties.  # noqa: E501
        :rtype: ObjectIndirectProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_id(self) -> int:
        """Gets the channel_id of this ObjectIndirectProperties.


        :return: The channel_id of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id: int):
        """Sets the channel_id of this ObjectIndirectProperties.


        :param channel_id: The channel_id of this ObjectIndirectProperties.
        :type channel_id: int
        """

        self._channel_id = channel_id

    @property
    def app_id(self) -> int:
        """Gets the app_id of this ObjectIndirectProperties.


        :return: The app_id of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id: int):
        """Sets the app_id of this ObjectIndirectProperties.


        :param app_id: The app_id of this ObjectIndirectProperties.
        :type app_id: int
        """

        self._app_id = app_id

    @property
    def frame_id(self) -> int:
        """Gets the frame_id of this ObjectIndirectProperties.


        :return: The frame_id of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._frame_id

    @frame_id.setter
    def frame_id(self, frame_id: int):
        """Sets the frame_id of this ObjectIndirectProperties.


        :param frame_id: The frame_id of this ObjectIndirectProperties.
        :type frame_id: int
        """

        self._frame_id = frame_id

    @property
    def time_stamp(self) -> int:
        """Gets the time_stamp of this ObjectIndirectProperties.


        :return: The time_stamp of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp: int):
        """Sets the time_stamp of this ObjectIndirectProperties.


        :param time_stamp: The time_stamp of this ObjectIndirectProperties.
        :type time_stamp: int
        """

        self._time_stamp = time_stamp

    @property
    def zone_id(self) -> int:
        """Gets the zone_id of this ObjectIndirectProperties.


        :return: The zone_id of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: int):
        """Sets the zone_id of this ObjectIndirectProperties.


        :param zone_id: The zone_id of this ObjectIndirectProperties.
        :type zone_id: int
        """

        self._zone_id = zone_id

    @property
    def object_id(self) -> int:
        """Gets the object_id of this ObjectIndirectProperties.


        :return: The object_id of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id: int):
        """Sets the object_id of this ObjectIndirectProperties.


        :param object_id: The object_id of this ObjectIndirectProperties.
        :type object_id: int
        """

        self._object_id = object_id

    @property
    def track_id(self) -> int:
        """Gets the track_id of this ObjectIndirectProperties.


        :return: The track_id of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._track_id

    @track_id.setter
    def track_id(self, track_id: int):
        """Sets the track_id of this ObjectIndirectProperties.


        :param track_id: The track_id of this ObjectIndirectProperties.
        :type track_id: int
        """

        self._track_id = track_id

    @property
    def line_id(self) -> int:
        """Gets the line_id of this ObjectIndirectProperties.


        :return: The line_id of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._line_id

    @line_id.setter
    def line_id(self, line_id: int):
        """Sets the line_id of this ObjectIndirectProperties.


        :param line_id: The line_id of this ObjectIndirectProperties.
        :type line_id: int
        """

        self._line_id = line_id

    @property
    def point_id(self) -> int:
        """Gets the point_id of this ObjectIndirectProperties.


        :return: The point_id of this ObjectIndirectProperties.
        :rtype: int
        """
        return self._point_id

    @point_id.setter
    def point_id(self, point_id: int):
        """Sets the point_id of this ObjectIndirectProperties.


        :param point_id: The point_id of this ObjectIndirectProperties.
        :type point_id: int
        """

        self._point_id = point_id
