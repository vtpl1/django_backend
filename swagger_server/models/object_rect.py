# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ObjectRect(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, x: int=0, y: int=0, width: int=0, height: int=0):  # noqa: E501
        """ObjectRect - a model defined in Swagger

        :param x: The x of this ObjectRect.  # noqa: E501
        :type x: int
        :param y: The y of this ObjectRect.  # noqa: E501
        :type y: int
        :param width: The width of this ObjectRect.  # noqa: E501
        :type width: int
        :param height: The height of this ObjectRect.  # noqa: E501
        :type height: int
        """
        self.swagger_types = {
            'x': int,
            'y': int,
            'width': int,
            'height': int
        }

        self.attribute_map = {
            'x': 'x',
            'y': 'y',
            'width': 'width',
            'height': 'height'
        }
        self._x = x
        self._y = y
        self._width = width
        self._height = height

    @classmethod
    def from_dict(cls, dikt) -> 'ObjectRect':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The objectRect of this ObjectRect.  # noqa: E501
        :rtype: ObjectRect
        """
        return util.deserialize_model(dikt, cls)

    @property
    def x(self) -> int:
        """Gets the x of this ObjectRect.


        :return: The x of this ObjectRect.
        :rtype: int
        """
        return self._x

    @x.setter
    def x(self, x: int):
        """Sets the x of this ObjectRect.


        :param x: The x of this ObjectRect.
        :type x: int
        """

        self._x = x

    @property
    def y(self) -> int:
        """Gets the y of this ObjectRect.


        :return: The y of this ObjectRect.
        :rtype: int
        """
        return self._y

    @y.setter
    def y(self, y: int):
        """Sets the y of this ObjectRect.


        :param y: The y of this ObjectRect.
        :type y: int
        """

        self._y = y

    @property
    def width(self) -> int:
        """Gets the width of this ObjectRect.


        :return: The width of this ObjectRect.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width: int):
        """Sets the width of this ObjectRect.


        :param width: The width of this ObjectRect.
        :type width: int
        """

        self._width = width

    @property
    def height(self) -> int:
        """Gets the height of this ObjectRect.


        :return: The height of this ObjectRect.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height: int):
        """Sets the height of this ObjectRect.


        :param height: The height of this ObjectRect.
        :type height: int
        """

        self._height = height
