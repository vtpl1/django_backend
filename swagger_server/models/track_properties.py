# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TrackProperties(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, track_id: int=-1, track_length: int=-1):  # noqa: E501
        """TrackProperties - a model defined in Swagger

        :param track_id: The track_id of this TrackProperties.  # noqa: E501
        :type track_id: int
        :param track_length: The track_length of this TrackProperties.  # noqa: E501
        :type track_length: int
        """
        self.swagger_types = {
            'track_id': int,
            'track_length': int
        }

        self.attribute_map = {
            'track_id': 'trackId',
            'track_length': 'trackLength'
        }
        self._track_id = track_id
        self._track_length = track_length

    @classmethod
    def from_dict(cls, dikt) -> 'TrackProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The trackProperties of this TrackProperties.  # noqa: E501
        :rtype: TrackProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def track_id(self) -> int:
        """Gets the track_id of this TrackProperties.


        :return: The track_id of this TrackProperties.
        :rtype: int
        """
        return self._track_id

    @track_id.setter
    def track_id(self, track_id: int):
        """Sets the track_id of this TrackProperties.


        :param track_id: The track_id of this TrackProperties.
        :type track_id: int
        """

        self._track_id = track_id

    @property
    def track_length(self) -> int:
        """Gets the track_length of this TrackProperties.


        :return: The track_length of this TrackProperties.
        :rtype: int
        """
        return self._track_length

    @track_length.setter
    def track_length(self, track_length: int):
        """Sets the track_length of this TrackProperties.


        :param track_length: The track_length of this TrackProperties.
        :type track_length: int
        """

        self._track_length = track_length
