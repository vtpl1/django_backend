# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.capability import Capability  # noqa: F401,E501
from swagger_server.models.event import Event  # noqa: F401,E501
from swagger_server.models.event_details import EventDetails  # noqa: F401,E501
from swagger_server.models.event_type import EventType  # noqa: F401,E501
from swagger_server.models.links import Links  # noqa: F401,E501
from swagger_server.models.meta_va_event import MetaVaEvent  # noqa: F401,E501
from swagger_server import util


class VaEvent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, capbilities_type: Capability=None, event_type: EventType=None, event_details: EventDetails=None, event_snaps: List[str]=None, event_clips: List[str]=None, updated: datetime=None, created: datetime=None, etag: str=None, links: Links=None, meta_va_event: MetaVaEvent=None):  # noqa: E501
        """VaEvent - a model defined in Swagger

        :param id: The id of this VaEvent.  # noqa: E501
        :type id: str
        :param capbilities_type: The capbilities_type of this VaEvent.  # noqa: E501
        :type capbilities_type: Capability
        :param event_type: The event_type of this VaEvent.  # noqa: E501
        :type event_type: EventType
        :param event_details: The event_details of this VaEvent.  # noqa: E501
        :type event_details: EventDetails
        :param event_snaps: The event_snaps of this VaEvent.  # noqa: E501
        :type event_snaps: List[str]
        :param event_clips: The event_clips of this VaEvent.  # noqa: E501
        :type event_clips: List[str]
        :param updated: The updated of this VaEvent.  # noqa: E501
        :type updated: datetime
        :param created: The created of this VaEvent.  # noqa: E501
        :type created: datetime
        :param etag: The etag of this VaEvent.  # noqa: E501
        :type etag: str
        :param links: The links of this VaEvent.  # noqa: E501
        :type links: Links
        :param meta_va_event: The meta_va_event of this VaEvent.  # noqa: E501
        :type meta_va_event: MetaVaEvent
        """
        self.swagger_types = {
            'id': str,
            'capbilities_type': Capability,
            'event_type': EventType,
            'event_details': EventDetails,
            'event_snaps': List[str],
            'event_clips': List[str],
            'updated': datetime,
            'created': datetime,
            'etag': str,
            'links': Links,
            'meta_va_event': MetaVaEvent
        }

        self.attribute_map = {
            'id': '_id',
            'capbilities_type': 'capbilitiesType',
            'event_type': 'eventType',
            'event_details': 'eventDetails',
            'event_snaps': 'eventSnaps',
            'event_clips': 'eventClips',
            'updated': 'updated',
            'created': 'created',
            'etag': 'etag',
            'links': 'links',
            'meta_va_event': 'metaVaEvent'
        }
        self._id = id
        self._capbilities_type = capbilities_type
        self._event_type = event_type
        self._event_details = event_details
        self._event_snaps = event_snaps
        self._event_clips = event_clips
        self._updated = updated
        self._created = created
        self._etag = etag
        self._links = links
        self._meta_va_event = meta_va_event

    @classmethod
    def from_dict(cls, dikt) -> 'VaEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The vaEvent of this VaEvent.  # noqa: E501
        :rtype: VaEvent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this VaEvent.


        :return: The id of this VaEvent.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this VaEvent.


        :param id: The id of this VaEvent.
        :type id: str
        """

        self._id = id

    @property
    def capbilities_type(self) -> Capability:
        """Gets the capbilities_type of this VaEvent.


        :return: The capbilities_type of this VaEvent.
        :rtype: Capability
        """
        return self._capbilities_type

    @capbilities_type.setter
    def capbilities_type(self, capbilities_type: Capability):
        """Sets the capbilities_type of this VaEvent.


        :param capbilities_type: The capbilities_type of this VaEvent.
        :type capbilities_type: Capability
        """

        self._capbilities_type = capbilities_type

    @property
    def event_type(self) -> EventType:
        """Gets the event_type of this VaEvent.


        :return: The event_type of this VaEvent.
        :rtype: EventType
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type: EventType):
        """Sets the event_type of this VaEvent.


        :param event_type: The event_type of this VaEvent.
        :type event_type: EventType
        """

        self._event_type = event_type

    @property
    def event_details(self) -> EventDetails:
        """Gets the event_details of this VaEvent.


        :return: The event_details of this VaEvent.
        :rtype: EventDetails
        """
        return self._event_details

    @event_details.setter
    def event_details(self, event_details: EventDetails):
        """Sets the event_details of this VaEvent.


        :param event_details: The event_details of this VaEvent.
        :type event_details: EventDetails
        """

        self._event_details = event_details

    @property
    def event_snaps(self) -> List[str]:
        """Gets the event_snaps of this VaEvent.

        _id of snap from #$ref: '#/components/schemas/snap'  # noqa: E501

        :return: The event_snaps of this VaEvent.
        :rtype: List[str]
        """
        return self._event_snaps

    @event_snaps.setter
    def event_snaps(self, event_snaps: List[str]):
        """Sets the event_snaps of this VaEvent.

        _id of snap from #$ref: '#/components/schemas/snap'  # noqa: E501

        :param event_snaps: The event_snaps of this VaEvent.
        :type event_snaps: List[str]
        """

        self._event_snaps = event_snaps

    @property
    def event_clips(self) -> List[str]:
        """Gets the event_clips of this VaEvent.

        _id of snap from #$ref: '#/components/schemas/clip'  # noqa: E501

        :return: The event_clips of this VaEvent.
        :rtype: List[str]
        """
        return self._event_clips

    @event_clips.setter
    def event_clips(self, event_clips: List[str]):
        """Sets the event_clips of this VaEvent.

        _id of snap from #$ref: '#/components/schemas/clip'  # noqa: E501

        :param event_clips: The event_clips of this VaEvent.
        :type event_clips: List[str]
        """

        self._event_clips = event_clips

    @property
    def updated(self) -> datetime:
        """Gets the updated of this VaEvent.


        :return: The updated of this VaEvent.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated: datetime):
        """Sets the updated of this VaEvent.


        :param updated: The updated of this VaEvent.
        :type updated: datetime
        """

        self._updated = updated

    @property
    def created(self) -> datetime:
        """Gets the created of this VaEvent.


        :return: The created of this VaEvent.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this VaEvent.


        :param created: The created of this VaEvent.
        :type created: datetime
        """

        self._created = created

    @property
    def etag(self) -> str:
        """Gets the etag of this VaEvent.


        :return: The etag of this VaEvent.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag: str):
        """Sets the etag of this VaEvent.


        :param etag: The etag of this VaEvent.
        :type etag: str
        """

        self._etag = etag

    @property
    def links(self) -> Links:
        """Gets the links of this VaEvent.


        :return: The links of this VaEvent.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links: Links):
        """Sets the links of this VaEvent.


        :param links: The links of this VaEvent.
        :type links: Links
        """

        self._links = links

    @property
    def meta_va_event(self) -> MetaVaEvent:
        """Gets the meta_va_event of this VaEvent.


        :return: The meta_va_event of this VaEvent.
        :rtype: MetaVaEvent
        """
        return self._meta_va_event

    @meta_va_event.setter
    def meta_va_event(self, meta_va_event: MetaVaEvent):
        """Sets the meta_va_event of this VaEvent.


        :param meta_va_event: The meta_va_event of this VaEvent.
        :type meta_va_event: MetaVaEvent
        """

        self._meta_va_event = meta_va_event
